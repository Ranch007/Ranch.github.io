[{"content":" [!TIP]\n凡是需要更改的文件都从themes/主题复制到主目录（hugo new site xxx创建的那个）下\n接下来的个性化配置文件建议都在博客主目录下操作，减少更新主题时个性化配置被覆盖的麻烦\n每次服务启动，会同步更新所有位置配置文件，但主目录配置文件优先级最高\n一、导入主题 安装主题一般而言存在三种方式：\ngit submodule 安装 go module 安装（需要安装 Go 语言） 本地安装 ​\t我个人更推荐第一种方式，考虑到后续升级的难易，这算是最均衡的一种方式。具体的安装方法可以在各主题的说明中找到，我这里安装的是【Stack】。 在网站根目录下，输入：\n1 2 3 4 5 git submodule add https://github.com/CaiJimmy/hugo-theme-stack/ hugo-theme-stack # 更新主题 git submodule init\t//初始化子模块 git submodule update\t//更新子模块到最新版本 ​\t等待下载完成后，便可以进行【配置】了。假如你想用其他方式安装，也可以参考【这里】，而且Stack本身有全英文的【说明文档】。我建议是将./themes/hugo-theme-stack/exampleSite/文件下的content和hugo.yaml直接复制到博客主目录下（这是一个作者放的例子，这里面有许多提示），根据说明与需求修改，会剩下很多时间。\n二、基础配置 2.1、打开hugo.yaml ​\t本地调试的时候baseurl可以设置为http://localhost:1313。调试完推送到GitHub上，记得改为网站根目录，有疑问请参考【这里】。\n2.2、网站icon、时间格式、博客头像 网站icon存储路径：/static/favcion.ico Go语言时间格式： 博客头像存储路径：/assets/img/avatar.png favicon、avatar的路径格式如下图所示\n2.3、License和留言板功能 license：做好公共版权许可协议声明 comments：进入【Giscus】官网，在线安装app，进入Giscus的配置页面，根据官方提示配置留言板功能。 这里我也给出我的配置，仅供参考。Message-Boards是我新建的一个留言板专属存放仓库。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 comments: enabled: true provider: giscus giscus: repo: Ranch007/Message-Boards repoID: R_kgDONBh4yw category: Announcements categoryID: DIC_kwDONBh4y84CjbwV mapping: pathname strict: 0 lightTheme: 0 darkTheme: 0 reactionsEnabled: 1 emitMetadata: 0 inputPosition: top lang: zh-CN 2.4、社交功能 加入个人社交平台的链接 icon路径：博客主目录的/assets/icons下，所有icon都在这里， 三、主题魔改 3.1 、整体布局 照抄Naive Koala老师的文章《Hugo-theme-Stack 魔改美化》，文章写的很细心也很用心，属于喂饭教程。\n[!NOTE]\n1.没有目录的自己创建一个同名目录，切记要仔细保证这些单词准确\n2.代码看不懂没事，读文章尝试理解，看一下作者改的那些代码，那就是实现变动的关键点\n这里涉及到复制的文件分别有：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 themes\\hugo-theme-stack\\assets\\scss\\custom.scss 复制到 /assets/scss/custom.scss themes\\hugo-theme-stack\\layouts\\partials\\footer\\custom.html 复制到 /layouts/partials/footer/custom.html themes\\hugo-theme-stack\\assets\\scss\\partials\\sidebar.scss 复制到 /assets/scss/partials/sidebar.scss（这里需要下载两个icon，记得更改好指定命名保存到/assets/icons；还涉及到去代码中更改，作者有提供行数，版本不一样所以不一定准确，所以得审一下代码，注意缩进） themes\\hugo-theme-stack\\layouts\\partials\\sidebar\\left.html 复制到 /layouts/partials/sidebar/left.html themes\\hugo-theme-stack\\assets\\scss\\grid.scss 复制到 /assets/scss/grid.scss themes\\hugo-theme-stack\\layouts\\index.html 复制到 /layouts/index.html 在 static 文件夹下新建 code-header.svg（macOS 风格红绿灯图标） themes\\hugo-theme-stack\\assets\\scss\\partials\\layout\\article.scss 复制到 /assets/scss/partials/layout/article.scss “显示语言和复制按钮”与代码行自带的copy重叠了，这里我没有弄 如果你想更从容一点，可以提前把上面的文件复制主目录。开始魔改前，记得整体备份一下。\n3.2、一些细节 3.2.2 添加文章开头更新时间和字数统计 ​\t在layouts\\partials\\article\\components\\details.html文件中，红框标记的就是增添组件的代码，黄框标记的就是两个组件的icon命名（目录在/assets/icons下）\n下图所示，就是增添后的文章标题组件\n3.2.2 添加文章末尾最后更新时间 ​\t在博客主文件夹下 layouts\\partials\\article\\components\\footer.html更新下面代码：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 \u0026lt;footer class=\u0026#34;article-footer\u0026#34;\u0026gt; {{ partial \u0026#34;article/components/tags\u0026#34; . }} {{ if and (.Site.Params.article.license.enabled) (not (eq .Params.license false)) }} \u0026lt;section class=\u0026#34;article-copyright\u0026#34;\u0026gt; {{ partial \u0026#34;helper/icon\u0026#34; \u0026#34;copyright\u0026#34; }} \u0026lt;span\u0026gt;{{ default .Site.Params.article.license.default .Params.license | markdownify }}\u0026lt;/span\u0026gt; \u0026lt;/section\u0026gt; {{ end }} {{- if ne .Lastmod .Date -}} \u0026lt;div\u0026gt; \u0026lt;section class=\u0026#34;article-lastmod\u0026#34;\u0026gt; {{ partial \u0026#34;helper/icon\u0026#34; \u0026#34;edit\u0026#34; }} \u0026lt;time class=\u0026#34;article-lastmod\u0026#34;\u0026gt; {{ T \u0026#34;article.lastUpdatedOn\u0026#34; }}{{- .Lastmod.Format (or .Site.Params.published \u0026#34;2006-01-02T15:04\u0026#34;) -}} \u0026lt;/time\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/div\u0026gt; {{- end -}} \u0026lt;/footer\u0026gt; 通过上面代码第16行，article.lastUpdatedOn添加“最后更新于”\n3.2.3 添加网站运行时间组件 ​\t打开layouts\\partials\\footer\\footer.html文件，将下面代码插入\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 \u0026lt;span id=\u0026#34;timeDate\u0026#34;\u0026gt;载入天数...\u0026lt;/span\u0026gt;\u0026lt;span id=\u0026#34;times\u0026#34;\u0026gt;载入时分秒...\u0026lt;/span\u0026gt; \u0026lt;script language=\u0026#34;javascript\u0026#34;\u0026gt; var now = new Date(); function createtime(){ // 当前时间 now.setTime(now.getTime()+250); var grt= new Date(\u0026#34;2024/10/15 00:00:00\u0026#34;); //网站诞生时间 days = (now - grt ) / 1000 / 60 / 60 / 24; dnum = Math.floor(days); hours = (now - grt ) / 1000 / 60 / 60 - (24 * dnum); hnum = Math.floor(hours); if(String(hnum).length ==1 ){hnum = \u0026#34;0\u0026#34; + hnum;} minutes = (now - grt ) / 1000 /60 - (24 * 60 * dnum) - (60 * hnum); mnum = Math.floor(minutes); if(String(mnum).length ==1 ){mnum = \u0026#34;0\u0026#34; + mnum;} seconds = (now - grt ) / 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum); snum = Math.round(seconds); if(String(snum).length ==1 ){snum = \u0026#34;0\u0026#34; + snum;} document.getElementById(\u0026#34;timeDate\u0026#34;).innerHTML = \u0026#34;本站已稳定运行\u0026#34;+dnum+\u0026#34; 天 \u0026#34;; document.getElementById(\u0026#34;times\u0026#34;).innerHTML = hnum + \u0026#34; 小时 \u0026#34; + mnum + \u0026#34; 分 \u0026#34; + snum + \u0026#34; 秒\u0026#34; } setInterval(\u0026#34;createtime()\u0026#34;,250); \u0026lt;/script\u0026gt; 该组件效果展示：\n3.2.4 左侧栏 ID 和简介换行 ​\t找到layouts\\partials\\footer\\footer.html中下方代码，更改为\n可以安装个人需求对下面代码进行调整，我将“个人ID”直接写进代码，通过更改subtitle实现换行\n1 2 3 4 \u0026lt;div class=\u0026#34;site-meta\u0026#34;\u0026gt; \u0026lt;h1 class=\u0026#34;site-name\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;{{ .Site.BaseURL | relLangURL }}\u0026#34;\u0026gt;\u0026lt;span\u0026gt;Ranch\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; \u0026lt;h2 class=\u0026#34;site-description\u0026#34;\u0026gt;{{ .Site.Params.sidebar.subtitle1 }}\u0026lt;br\u0026gt;{{ .Site.Params.sidebar.subtitle2 }}\u0026lt;/h2\u0026gt; \u0026lt;/div\u0026gt; 实际效果展示\n附录 参考文献 《Hugo-theme-Stack 魔改美化》 《如何使用git submodule》 《将博客评论系统由 utterance 迁移至 giscus》 《hugo stack 主题美化》 《建站技术 | 使用 Hugo + Stack 简单搭建一个博客》 版权信息 本文原载于 Ranch\u0026rsquo;s Blog，遵循 CC BY-NC-SA 4.0 协议，复制请保留原文出处。\n","date":"2024-10-20T11:55:35+08:00","permalink":"http://ranch007.github.io/p/%E5%8D%9A%E5%AE%A2%E8%A3%85%E4%BF%AE%E6%97%A5%E8%AE%B0hugo-stack-giscus%E9%AD%94%E6%94%B9%E7%BE%8E%E5%8C%96-%E7%BB%86%E8%8A%82%E6%BB%A1%E6%BB%A1/","title":"【博客装修日记】Hugo➕ Stack ➕ Giscus魔改美化 细节满满"},{"content":"一、环境准备 1.1 Git下载 进入【git官网】，找到对应适用于自己电脑系统的版本进行下载 根据提示，默认安装即可 1.2 Hugo下载 在【Hugo的GitHub官网】上，根据自己系统，选择对应版本直接下载 （Tips：这里我根据【Hugo官网】的建议是安装了扩展版本） 下载后解压即可 （建议）将hugo.exe所在文件夹加入用户环境变量，方便使用hugo命令 二、博客搭建 2.1 创建博客 （1）在hugo.exe所在文件夹上方地址栏中，输入cmd，然后回车唤起命令行 （2）输入以下命令，创建xxx文件夹（这个文件夹就是博客的主文件夹，后面也可以改名）；并给出搭建博客的步骤 1 2 # 在当前文件夹中为创建xxx博客项目 hugo new site xxx 运行后便会输出一个网站目录，其结构为（引用自炸鸡人博客）：\ncd切换进入blog\\目录，输入下面命令，启动hugo服务 1 hugo server -D Ctrl+鼠标左键点击上方链接，进入演示站点，如需停止在命令行输入Ctrl+C停止服务（hugo默认是没有主题的，后面会进行一个主题配置） 2.2 导入主题 （1）前往【Hugo Themes】，选择一个自己中意的主题 （2）安装主题一般而言存在三种方式： git submodule 安装 本地安装 go module安装（需要安装Go语言） （3）我个人使用第一种方式，考虑到后续主题升级的难易，这算是最均衡的一种方式。具体的安装方法可以在各主题的说明中找到，我这里安装的是【Stack】。 在网站目录下，输入： 1 2 3 4 5 # 前目录中初始化一个空的 Git 存储库 git init # 将stack主题克隆到`themes`目录中，并将其作为Git子模块添加到当前项目中 git submodule add https://github.com/CaiJimmy/hugo-theme-stack/ themes/hugo-theme-stack 等待下载完成后，便可以进行后面的配置了。假如你想用其他方式安装，也可以参考这里。Stack本身有全英文的说明文档，\n（4）等待下载完成。建议将exampleSite样例数据中的`Content和hugo.yaml复制到主文件夹中 （4）进入主文件下的content\\post，并删掉rich-content文件夹（不然会报错） （5）再次启动hugo服务，查看主题。具体主题配置细节放在下一篇。 三、GitHub部署 3.1 常规部署 （1）前往【GitHub官网】，登录或者注册一个GitHub账号，创建新的仓库{GitHub用户名}.github.io（这里我已经注册了） （2）前往进入xxx.github.io仓库，从Setting -\u0026gt; Pages先将source的“从分支部署“切换到”GitHub操作“，初始化一下，再切回“分支部署” 然后Branch出现”main分支“，选择main保存。\n（Tips：现在需要先将内容推送到GitHub才能开启GitHub Pages网址。）\n（3）回到本地博客的主文件夹。准备发布网站，执行以下命令，Hugo 会在public在项目根目录中创建整个静态网站 1 hugo -D （4）接着在进入 public 文件夹，执行以下命令上传到github仓库上，第一次上传可能需要输入账号密码 1 2 3 4 5 6 git init git add . git commit -m \u0026#34;first commit\u0026#34; git branch -M main git remote add origin https://github.com/{你的GitHub用户名}/{用户名.github.io} git push -u origin main （5）前往https://github.com/{GitHub用户名}/{用户名}.github.io，点击Branch判断有没有上传成功 3.2 自动化部署 具体要求 如果想使用 Github Actions 自动部署 hugo 博客，则最起码需要创建两个 Github 的仓库。\n第①个，便是存储博客 .md 源文件的地方，其实就是 hugo的主文件； 第②个，则是部署 Github Pages 的仓库（存放public文件夹里的所有文件），仓库名必须是 \u0026lt;GitHub用户名\u0026gt;.github.io，这是 github 官方要求的。 原理流程 1.当我们提交博客 .md 源文件到仓库 ① 后，利用 Github Actions 自动执行 hugo 的命令 2.在 public 目录下会自动生成静态网站，然后再将 public 目录推送到仓库 ② 3.由于仓库② 是 Github Pages，它接着就会自动执行部署的命令。\n（1）我们需要从主文件的仓库①推送到外部 GitHub Pages 仓库②，需要特定权限，所以还得在 GitHub 账户 Setting - Developer settings - Personal access tokens （https://github.com/settings/tokens）下创建一个 Token： 进入设置，Developer settings就在设置左下角，如下图点进去（需要验证）\n如下图进行配置，创建一个永久性token，并复制 （Tips：切记！！Token只会出现一次，请做好留存、保密）\n最后，来到以github.io结尾的仓库①。添加一个 secret，保存并命名你复制的token值，这个Name下一步需要用到。\n（2）管理博客主文件的仓库①，点击 Actions 按钮，即可添加工作流文件，该文件一般是以 .yml 结尾，这样才能被 GitHub 识别 我创建的文件名为deploy.yml，内容如下：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 name: deploy # 代码提交到main分支时触发github action on: push: branches: - main jobs: deploy: runs-on: ubuntu-latest steps: - name: Checkout uses: actions/checkout@v4 with: fetch-depth: 0 - name: Setup Hugo uses: peaceiris/actions-hugo@v3 with: hugo-version: \u0026#34;latest\u0026#34; extended: true - name: Build Web run: hugo -D - name: Deploy Web uses: peaceiris/actions-gh-pages@v4 with: PERSONAL_TOKEN: ${{ secrets.{保存toekn的Name} }} EXTERNAL_REPOSITORY: {GitHub用户名}/{用户名}.github.io PUBLISH_BRANCH: main PUBLISH_DIR: public commit_message: auto deploy 这样，我们的博客网站就部署好了，这极大地简化了我们发布文章的流程。\n附录 参考文献 【Hugo】Hugo + Github 免费部署自己的博客 (letere-gzj.github.io) 使用 Hugo 对博客的重建与 Stack 主题优化记录 使用 Github Actions 自动部署 hugo 博客 Github Actions 自动部署 Hugo 版权信息 本文原载于 Ranch\u0026rsquo;s Blog，遵循 CC BY-NC-SA 4.0 协议，复制请保留原文出处。\n","date":"2024-10-18T22:19:18+08:00","permalink":"http://ranch007.github.io/p/free%E4%BD%BF%E7%94%A8hugo%E6%90%AD%E5%BB%BAgithub%E7%A7%81%E4%BA%BA%E5%8D%9A%E5%AE%A2/","title":"【Free】使用Hugo搭建GitHub私人博客"}]